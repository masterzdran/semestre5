<project name="progs" default="test" basedir=".">

	<description>
		Ant build file for LS
	</description>

	<!--++++++++++ Properties ++++++++++-->
	<property name="src-main" location="src/main/java"/>
	<property name="src-test" location="src/test/java"/>
	<property name="src-apps" location="src/main/apps"/>
	<property name="vendor-lib" location="vendor/main/lib"/>
	<property name="target"  location="target"/>
	<property name="target-classes"  location="target/classes"/>
	<property name="target-test-classes"  location="target/test-classes"/>
	<property name="target-test-reports"	location="target/test-reports"/>
	<property name="target-apps"	location="target/apps"/>

	<path id="main.extlibs.class.path">
		<fileset dir="${vendor-lib}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="test.extlibs.class.path">
		<path refid="main.extlibs.class.path" />
		<fileset dir="vendor/test/lib">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!--++++++++++ Targets ++++++++++-->

	<target name="init" description ="Creates the target folders">
		<mkdir dir="${target-classes}"/>
		<mkdir dir="${target-test-classes}"/>
		<mkdir dir="${target-test-reports}"/>
	</target>


	<target name="clean" description="Removes the target folders" >
		<!--delete dir="${target}" excludes="applications" verbose="true"/-->
		<delete includeEmptyDirs="true" failonerror="false" verbose="true" >
			<fileset dir="${target}" defaultexcludes="false"/>
		</delete>

	</target>


	<target name="compile-main" depends="init"
		description="Compiles the main source" >

		<javac debug="true"
			srcdir="${src-main}"
			destdir="${target-classes}"
			includeantruntime="false">
			<classpath>
				<path refid="main.extlibs.class.path" />
			</classpath>
		</javac>
		<copy todir="${target-classes}">
			<fileset dir="${src-main}">
				<include name="**/*.properties"/>
			</fileset>
		</copy>
	</target>


	<target name="compile-test" depends="compile-main"
		description="Compiles the test source" >
		<javac  debug="true"
			debugLevel="source"
			srcdir="${src-test}"
			destdir="${target-test-classes}"
			includeantruntime="true">
			<classpath>
				<pathelement location="${target-classes}"/>
				<path refid="test.extlibs.class.path" />
			</classpath>
		</javac>
	</target>

	<target name="test" depends="compile-test" description="Runs the tests">
		<junit printsummary="yes" haltonfailure="true" showoutput="true" >
			<classpath>
				<pathelement location="${target-classes}"/>
				<pathelement location="${target-test-classes}"/>
				<path refid="test.extlibs.class.path" />
			</classpath>

			<formatter type="plain"/>

			<batchtest fork="yes" todir="${target-test-reports}" >
				<fileset dir="${src-test}">
					<include name="**/*Test*.java"/>
				</fileset>
				<formatter type="xml"/>
				<formatter type="plain" usefile="false" />
			</batchtest>
		</junit>
	</target>

	<target name="package" depends="test" description="Packages the main classes into a jar" >
		<buildnumber />
		<jar jarfile="${target}/library.jar" basedir="${target-classes}"/>
	</target>

	<!-- USAGE: ant deploy-app -Dtarget-app=CommandLineParserUsageSample -->
	<target name="deploy-app" depends="package">
		<!--echo message="${target-app}"/-->
		<delete dir="${target-apps}/${target-app}" includeEmptyDirs="true" verbose="true" failonerror="false"/>
		<copy todir="${target-apps}/${target-app}" verbose="true">
			<fileset file="${src-apps}/${target-app}.sh.app"/>
			<globmapper from="*.sh.app" to="*.sh"/>
		</copy>
		<copy todir="${target-apps}/${target-app}" verbose="true">
			<fileset file="${src-apps}/${target-app}.bat.app"/>
			<globmapper from="*.bat.app" to="*.bat"/>
		</copy>
		<copy todir="${target-apps}/${target-app}" verbose="true">
			<fileset file="${vendor-lib}/sqljdbc4.jar"/>
		</copy>
		<copy todir="${target-apps}/${target-app}" verbose="true">
			<fileset file="${vendor-lib}/joda-time.jar"/>
		</copy>
		<copy todir="${target-apps}/${target-app}" verbose="true">
			<fileset id="jar-fileset" dir="${target}">
				<filename name="*.jar"/>
			</fileset>
		</copy>
        <copy todir="${target-apps}/${target-app}" verbose="true">
            <fileset file="${vendor-lib}/default.properties"/>
        </copy>
		<!--echo message="${toString:jar-fileset}"/-->
	</target>
</project>
