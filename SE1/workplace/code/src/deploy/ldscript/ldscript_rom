ENTRY(_start)

MEMORY
{
	ram : ORIGIN = 0x40000000, LENGTH = 0x64992 /*Free Ram*/
	rom : ORIGIN = 0x0, LENGTH = 128K			/*Flash Rom*/
}

SECTIONS {

.startup : {
	*(.startup*)
} > rom

.text : {
	*(.text*)
	*(.glue*)
	*(.rodata) 
    *(.rodata*)
	*(.gnu.linkonce*)
	*(.eh_frame*)
} > rom

. = ALIGN(4);					/*if text section isn't aligned*/
__rom_data_start__ = .;			/*variable to copy data from rom to ram*/

.data : AT (__rom_data_start__) {
    __data_start__ = ABSOLUTE(.);
	*(.data*)
	. = ALIGN(4);
    __data_end__ = ABSOLUTE(.);
} > ram

end = .;						/*some compilers need end label after data*/

.bss ALIGN(4) : {
    __bss_start__ = ABSOLUTE(.);
    *(.bss*) *(COMMON);
	. = ALIGN(4);
    __bss_end__ = ABSOLUTE(.);
} > ram

.stack ALIGN(4) : {
	*(.stack*)
} > ram

.rodata : {
	*(.rodata*)
} > ram


  /* Stabs debugging sections.  */
  .stab          0 : { *(.stab) }
  .stabstr       0 : { *(.stabstr) }
  .stab.excl     0 : { *(.stab.excl) }
  .stab.exclstr  0 : { *(.stab.exclstr) }
  .stab.index    0 : { *(.stab.index) }
  .stab.indexstr 0 : { *(.stab.indexstr) }
  .comment       0 : { *(.comment) }

.debug_abbrev	0 : { *(.debug_abbrev) }
.debug_info		0 : { *(.debug_info) }
.debug_line		0 : { *(.debug_line) }
.debug_pubnames	0 : { *(.debug_pubnames) }
.debug_aranges	0 : { *(.debug_aranges) }


} /* end of sections */
